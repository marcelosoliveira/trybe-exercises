Exercícios
O MongoDb possui diversas ferramentas, como, por exemplo, mongo , mongosh , Compass e outras ferramentas de terceiros. Você pode utilizar o que achar melhor para executar as queries , o importante é realizá-las.

1.Inspecione um documento para que você se familiarize com eles. Entenda os campos e os níveis existentes no documento escolhido.

{
	"_id" : ObjectId("60493be6ec9e36049b6aef85"),
	"name" : "Abe Sapien",
	"alignment" : "good",
	"gender" : "Male",
	"race" : "Icthyo Sapien",
	"aspects" : {
		"eyeColor" : "blue",
		"hairColor" : "No Hair",
		"skinColor" : "blue",
		"height" : 191,
		"weight" : 29.48
	},
	"publisher" : "Dark Horse Comics"
}


2.Selecione todos os super-heróis com menos de 1.80m de altura. Lembre-se de que essa informação está gravada em centímetros.

db.superheroes.find({ "aspects.height": {$lt: 180 } }).pretty();


3.Retorne o total de super-heróis menores que 1.80m.

db.superheroes.find({ "aspects.height": {$lt: 180 } }).count();


4.Retorne o total de super-heróis com até 1.80m.

db.superheroes.find({ "aspects.height": {$lte: 180 } }).count();


5.Selecione um super-herói com 2.00m ou mais de altura.

db.superheroes.find({ "aspects.height": {$gte: 200 } });


6.Retorne o total de super-heróis com 2.00m ou mais.

db.superheroes.find({ "aspects.height": {$gte: 200 } }).count();


7.Selecione todos os super-heróis que têm olhos verdes.

db.superheroes.find({ "aspects.eyeColor": 'green' }).pretty();


8.Retorne o total de super-heróis com olhos azuis.

db.superheroes.find({ "aspects.eyeColor": 'blue' }).count();


9.Utilizando o operador $in , selecione todos os super-heróis com cabelos pretos ou carecas ( "No Hair" ).

db.superheroes.find({ "aspects.hairColor": { $in: ['black', 'No Hair'] } }).pretty();


10.Retorne o total de super-heróis com cabelos pretos ou carecas ( "No Hair" ).

db.superheroes.find({ "aspects.hairColor": { $in: ['black', 'No Hair'] } }).count();


11.Retorne o total de super-heróis que não tenham cabelos pretos ou não sejam carecas.

db.superheroes.find({ "aspects.hairColor": { $not: { $in: ['black', 'No Hair'] } } }).count();


12.Utilizando o operador $not , retorne o total de super-heróis que não tenham mais de 1.80m de altura.

db.superheroes.find({"aspects.height": { $not: { $gt: 180 } } }).count();


13.Selecione todos os super-heróis que não sejam humanos e não sejam maiores do que 1.80m.

db.superheroes.find({ $and: [{ "race": { $nin:['Human'] } }, { "aspects.height": { $not: { $gt: 180 } } }] }).pretty();


14.Selecione todos os super-heróis com 1.80m ou 2.00m de altura e que sejam publicados pela Marvel Comics .

db.superheroes.find({ $and: [ { $or: [{ "aspects.height": 180}, { "aspects.height": 200}] }, { "publisher": 'Marvel Comics'} ] });


15.Selecione todos os super-heróis que pesem entre 80kg e 100kg , sejam Humanos ou Mutantes e não sejam publicados pela DC Comics.

db.superheroes.find({ $or: [{ $and: [{"aspects.weight": 80}, {"aspects.weight": 100}] }, { $or: [{ "race": 'Human'}, { "race": 'Mutant'}] }, {  "publisher": { nin:['DC Comics']} }]  }).pretty();


16.Retorne o total de documentos que não contêm o campo race.

db.superheroes.find({ race: { $exists: false } }).pretty();


17.Retorne o total de documentos que contêm o campo hairColor.

db.superheroes.find({ "aspects.hairColor": { $exists: true } }).count();


18.Remova apenas um documento publicado pela Sony Pictures.

db.superheroes.deleteOne({ "publisher": 'Sony Pictures'});


19.Remova todos os documentos publicados pelo George Lucas.

db.superheroes.deleteMany({ "publisher": 'George Lucas'});
