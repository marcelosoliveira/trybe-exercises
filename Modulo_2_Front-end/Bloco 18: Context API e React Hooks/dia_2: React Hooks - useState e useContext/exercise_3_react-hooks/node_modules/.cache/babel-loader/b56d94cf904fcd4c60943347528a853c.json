{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/\\xC1rea de Trabalho/exercise-react-hooks-refactoring/src/context/Provider.js\";\nimport React, { useState } from 'react';\nimport CarsContext from './CarsContext';\n\nfunction Provider({\n  children\n}) {\n  const [red, setRed] = useState(false);\n  const [blue, setBlue] = useState(false);\n  const [yellow, setYellow] = useState(false);\n  const [color, setColor] = useState('red');\n\n  const moveCar = (red, blue, yellow) => {\n    setRed(red);\n    setBlue(blue);\n    setYellow(yellow);\n  };\n\n  const changeSignal = signalColor => {\n    setColor(signalColor);\n  };\n\n  const renderSignal = signalColor => {\n    if (signalColor === 'red') return redSignal;\n    if (signalColor === 'yellow') return yellowSignal;\n    if (signalColor === 'green') return greenSignal;\n    return null;\n  };\n\n  const contextCar = {\n    red,\n    blue,\n    yellow,\n    color,\n    moveCar,\n    changeSignal,\n    renderSignal\n  };\n  return /*#__PURE__*/React.createElement(CarsContext.Provider, {\n    value: contextCar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n;\nexport default Provider;","map":{"version":3,"sources":["/home/marcelotryber/Área de Trabalho/exercise-react-hooks-refactoring/src/context/Provider.js"],"names":["React","useState","CarsContext","Provider","children","red","setRed","blue","setBlue","yellow","setYellow","color","setColor","moveCar","changeSignal","signalColor","renderSignal","redSignal","yellowSignal","greenSignal","contextCar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAE9B,QAAM,CAAEC,GAAF,EAAOC,MAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAEM,IAAF,EAAQC,OAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAAEQ,MAAF,EAAUC,SAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAEU,KAAF,EAASC,QAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMY,OAAO,GAAG,CAACR,GAAD,EAAME,IAAN,EAAYE,MAAZ,KAAuB;AACrCH,IAAAA,MAAM,CAACD,GAAD,CAAN;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GAJD;;AAMA,QAAMK,YAAY,GAAIC,WAAD,IAAiB;AACpCH,IAAAA,QAAQ,CAACG,WAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAID,WAAD,IAAiB;AACpC,QAAIA,WAAW,KAAK,KAApB,EAA2B,OAAOE,SAAP;AAC3B,QAAIF,WAAW,KAAK,QAApB,EAA8B,OAAOG,YAAP;AAC9B,QAAIH,WAAW,KAAK,OAApB,EAA6B,OAAOI,WAAP;AAC7B,WAAO,IAAP;AACD,GALD;;AAOA,QAAMC,UAAU,GAAG;AACjBf,IAAAA,GADiB;AAEjBE,IAAAA,IAFiB;AAGjBE,IAAAA,MAHiB;AAIjBE,IAAAA,KAJiB;AAKjBE,IAAAA,OALiB;AAMjBC,IAAAA,YANiB;AAOjBE,IAAAA;AAPiB,GAAnB;AAUA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,QADH,CADF;AAMD;;AAAA;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport CarsContext from './CarsContext';\n\nfunction Provider({ children }) { \n\n  const [ red, setRed ] = useState(false);\n  const [ blue, setBlue ] = useState(false);\n  const [ yellow, setYellow ] = useState(false);\n  const [ color, setColor ] = useState('red');\n\n  const moveCar = (red, blue, yellow) => {\n    setRed(red);\n    setBlue(blue);\n    setYellow(yellow);\n  };\n\n  const changeSignal = (signalColor) => {\n    setColor(signalColor);\n  }\n\n  const renderSignal = (signalColor) => {\n    if (signalColor === 'red') return redSignal;\n    if (signalColor === 'yellow') return yellowSignal;\n    if (signalColor === 'green') return greenSignal;\n    return null;\n  };\n\n  const contextCar = {\n    red,\n    blue,\n    yellow,\n    color,\n    moveCar,\n    changeSignal,\n    renderSignal,\n  }\n\n  return (\n    <CarsContext.Provider value={contextCar}>\n      {children}\n    </CarsContext.Provider>\n  );\n \n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}