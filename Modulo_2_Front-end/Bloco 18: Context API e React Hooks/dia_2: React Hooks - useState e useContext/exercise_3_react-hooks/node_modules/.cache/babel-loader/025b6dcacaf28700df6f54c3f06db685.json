{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/\\xC1rea de Trabalho/exercise-react-hooks-refactoring/src/GameBoard.js\";\nimport React, { useContext } from 'react';\nimport ContextGame from './utils/ContextGame';\nimport GameCell from './GameCell';\nimport './GameBoard.css';\n\nfunction GameBoard() {\n  const {\n    gameBoard,\n    updateGame\n  } = useContext(ContextGame);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, gameBoard.map((playerId, i) => /*#__PURE__*/React.createElement(GameCell, {\n    id: i,\n    key: i,\n    onClick: () => updateGame(i),\n    content: playerId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default GameBoard;","map":{"version":3,"sources":["/home/marcelotryber/√Årea de Trabalho/exercise-react-hooks-refactoring/src/GameBoard.js"],"names":["React","useContext","ContextGame","GameCell","GameBoard","gameBoard","updateGame","map","playerId","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,iBAAP;;AAEA,SAASC,SAAT,GAAqB;AAEnB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA4BL,UAAU,CAACC,WAAD,CAA5C;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,SAAS,CAACE,GAAV,CAAc,CAACC,QAAD,EAAWC,CAAX,kBACb,oBAAC,QAAD;AACE,IAAA,EAAE,EAAEA,CADN;AAEE,IAAA,GAAG,EAAEA,CAFP;AAGE,IAAA,OAAO,EAAE,MAAMH,UAAU,CAACG,CAAD,CAH3B;AAIE,IAAA,OAAO,EAAED,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAYH;;AAED,eAAeJ,SAAf","sourcesContent":["import React, { useContext } from 'react';\nimport ContextGame from './utils/ContextGame'\nimport GameCell from './GameCell';\nimport './GameBoard.css';\n\nfunction GameBoard() {\n  \n  const { gameBoard, updateGame } = useContext(ContextGame);\n\n    return (\n      <div className=\"game-board\">\n        {gameBoard.map((playerId, i) => (\n          <GameCell\n            id={i}\n            key={i}\n            onClick={() => updateGame(i)}\n            content={playerId}\n          />\n        ))}\n      </div>\n    );\n}\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}