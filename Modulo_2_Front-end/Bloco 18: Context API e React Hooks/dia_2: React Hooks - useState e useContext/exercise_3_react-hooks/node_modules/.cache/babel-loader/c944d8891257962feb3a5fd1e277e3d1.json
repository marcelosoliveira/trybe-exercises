{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/\\xC1rea de Trabalho/exercise-react-hooks-refactoring/src/utils/Provider.js\";\nimport React, { useState } from 'react';\nimport ContextGame from './ContextGame';\n\nfunction Provider({\n  children\n}) {\n  const [activePlayer, setActivePlayer] = useState(1);\n  const [gameBoard, setGameBoard] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n  const resetGame = () => {\n    setActivePlayer(1);\n    setGameBoard([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  };\n\n  const toggleActivePlayer = () => {\n    if (activePlayer === 1) return setActivePlayer(2);\n    return setActivePlayer(1);\n  };\n\n  const updateGame = cellClicked => {\n    const newState = [...gameBoard];\n    let newActivePlayer = activePlayer;\n\n    if (gameBoard[cellClicked] === 0) {\n      newState[cellClicked] = activePlayer;\n      newActivePlayer = toggleActivePlayer();\n    } else newState[cellClicked] = gameBoard[cellClicked];\n\n    return {\n      activePlayer: newActivePlayer,\n      gameBoard: newState\n    };\n  };\n\n  const contextGame = {\n    activePlayer,\n    gameBoard,\n    resetGame,\n    updateGame\n  };\n  return /*#__PURE__*/React.createElement(ContextGame.Provider, {\n    value: contextGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nexport default Provider;","map":{"version":3,"sources":["/home/marcelotryber/Área de Trabalho/exercise-react-hooks-refactoring/src/utils/Provider.js"],"names":["React","useState","ContextGame","Provider","children","activePlayer","setActivePlayer","gameBoard","setGameBoard","resetGame","toggleActivePlayer","updateGame","cellClicked","newState","newActivePlayer","contextGame"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC9B,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCL,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAAEM,SAAF,EAAaC,YAAb,IAA8BP,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAD,CAA5C;;AAEA,QAAMQ,SAAS,GAAG,MAAM;AACtBH,IAAAA,eAAe,CAAC,CAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAD,CAAZ;AACD,GAHD;;AAKA,QAAME,kBAAkB,GAAG,MAAM;AAC/B,QAAIL,YAAY,KAAK,CAArB,EAAwB,OAAOC,eAAe,CAAC,CAAD,CAAtB;AACxB,WAAOA,eAAe,CAAC,CAAD,CAAtB;AACD,GAHD;;AAKA,QAAMK,UAAU,GAAIC,WAAD,IAAiB;AAClC,UAAMC,QAAQ,GAAG,CAAC,GAAGN,SAAJ,CAAjB;AACA,QAAIO,eAAe,GAAGT,YAAtB;;AAEA,QAAIE,SAAS,CAACK,WAAD,CAAT,KAA2B,CAA/B,EAAkC;AAChCC,MAAAA,QAAQ,CAACD,WAAD,CAAR,GAAwBP,YAAxB;AACAS,MAAAA,eAAe,GAAGJ,kBAAkB,EAApC;AACD,KAHD,MAGOG,QAAQ,CAACD,WAAD,CAAR,GAAwBL,SAAS,CAACK,WAAD,CAAjC;;AAEP,WAAO;AACLP,MAAAA,YAAY,EAAES,eADT;AAELP,MAAAA,SAAS,EAAEM;AAFN,KAAP;AAID,GAbD;;AAgBA,QAAME,WAAW,GAAG;AAClBV,IAAAA,YADkB;AAElBE,IAAAA,SAFkB;AAGlBE,IAAAA,SAHkB;AAIlBE,IAAAA;AAJkB,GAApB;AAOA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAGI,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIX,QADJ,CADF;AAKD;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport ContextGame from './ContextGame';\n\nfunction Provider({ children }) {\n  const [ activePlayer, setActivePlayer ] = useState(1);\n  const [ gameBoard, setGameBoard ] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    \n  const resetGame = () => {\n    setActivePlayer(1);\n    setGameBoard([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  }\n\n  const toggleActivePlayer = () => {\n    if (activePlayer === 1) return setActivePlayer(2);\n    return setActivePlayer(1);\n  }\n\n  const updateGame = (cellClicked) => {\n    const newState = [...gameBoard];\n    let newActivePlayer = activePlayer;\n\n    if (gameBoard[cellClicked] === 0) {\n      newState[cellClicked] = activePlayer;\n      newActivePlayer = toggleActivePlayer();\n    } else newState[cellClicked] = gameBoard[cellClicked];\n\n    return {\n      activePlayer: newActivePlayer,\n      gameBoard: newState,\n    };\n  }\n\n\n  const contextGame = {\n    activePlayer,\n    gameBoard,\n    resetGame,\n    updateGame,    \n  }\n\n  return (\n    <ContextGame.Provider value={ contextGame }>\n      { children }\n    </ContextGame.Provider>\n  );  \n}\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}