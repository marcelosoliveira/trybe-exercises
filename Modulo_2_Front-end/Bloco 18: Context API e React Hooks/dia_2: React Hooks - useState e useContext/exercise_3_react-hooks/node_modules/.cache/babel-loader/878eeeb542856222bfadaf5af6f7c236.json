{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/\\xC1rea de Trabalho/exercise-react-hooks-refactoring/src/context/Provider.js\";\nimport React, { useState } from 'react';\nimport CarsContext from './CarsContext';\nimport redSignal from '../images/redSignal.jpeg';\nimport yellowSignal from '../images/yellowSignal.jpeg';\nimport greenSignal from '../images/greenSignal.jpeg';\n\nfunction Provider({\n  children\n}) {\n  const cars = {\n    red: false,\n    blue: false,\n    yellow: false\n  };\n  const [red, setRed] = useState(false);\n  const [blue, setBlue] = useState(false);\n  const [yellow, setYellow] = useState(false);\n  const [color, setColor] = useState('red');\n\n  const moveCar = (red, blue, yellow) => {\n    setRed(red);\n    setBlue(blue);\n    setYellow(yellow);\n  };\n\n  const changeSignal = signalColor => {\n    setColor(signalColor);\n  };\n\n  const renderSignal = signalColor => {\n    if (signalColor === 'red') return redSignal;\n    if (signalColor === 'yellow') return yellowSignal;\n    if (signalColor === 'green') return greenSignal;\n    return null;\n  };\n\n  const contextCar = {\n    red,\n    blue,\n    yellow,\n    color,\n    moveCar,\n    changeSignal,\n    renderSignal\n  };\n  return /*#__PURE__*/React.createElement(CarsContext.Provider, {\n    value: contextCar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n;\nexport default Provider;","map":{"version":3,"sources":["/home/marcelotryber/Área de Trabalho/exercise-react-hooks-refactoring/src/context/Provider.js"],"names":["React","useState","CarsContext","redSignal","yellowSignal","greenSignal","Provider","children","cars","red","blue","yellow","setRed","setBlue","setYellow","color","setColor","moveCar","changeSignal","signalColor","renderSignal","contextCar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAE9B,QAAMC,IAAI,GAAG;AACXC,IAAAA,GAAG,EAAE,KADM;AAEXC,IAAAA,IAAI,EAAE,KAFK;AAGXC,IAAAA,MAAM,EAAE;AAHG,GAAb;AAMA,QAAM,CAAEF,GAAF,EAAOG,MAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAES,IAAF,EAAQG,OAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAAEU,MAAF,EAAUG,SAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAEc,KAAF,EAASC,QAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMgB,OAAO,GAAG,CAACR,GAAD,EAAMC,IAAN,EAAYC,MAAZ,KAAuB;AACrCC,IAAAA,MAAM,CAACH,GAAD,CAAN;AACAI,IAAAA,OAAO,CAACH,IAAD,CAAP;AACAI,IAAAA,SAAS,CAACH,MAAD,CAAT;AACD,GAJD;;AAMA,QAAMO,YAAY,GAAIC,WAAD,IAAiB;AACpCH,IAAAA,QAAQ,CAACG,WAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAID,WAAD,IAAiB;AACpC,QAAIA,WAAW,KAAK,KAApB,EAA2B,OAAOhB,SAAP;AAC3B,QAAIgB,WAAW,KAAK,QAApB,EAA8B,OAAOf,YAAP;AAC9B,QAAIe,WAAW,KAAK,OAApB,EAA6B,OAAOd,WAAP;AAC7B,WAAO,IAAP;AACD,GALD;;AAOA,QAAMgB,UAAU,GAAG;AACjBZ,IAAAA,GADiB;AAEjBC,IAAAA,IAFiB;AAGjBC,IAAAA,MAHiB;AAIjBI,IAAAA,KAJiB;AAKjBE,IAAAA,OALiB;AAMjBC,IAAAA,YANiB;AAOjBE,IAAAA;AAPiB,GAAnB;AAUA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QADH,CADF;AAMD;;AAAA;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport CarsContext from './CarsContext';\nimport redSignal from '../images/redSignal.jpeg';\nimport yellowSignal from '../images/yellowSignal.jpeg';\nimport greenSignal from '../images/greenSignal.jpeg';\n\nfunction Provider({ children }) {\n  \n  const cars = {\n    red: false,\n    blue: false,\n    yellow: false,\n  }\n\n  const [ red, setRed ] = useState(false);\n  const [ blue, setBlue ] = useState(false);\n  const [ yellow, setYellow ] = useState(false);\n  const [ color, setColor ] = useState('red');\n\n  const moveCar = (red, blue, yellow) => {\n    setRed(red);\n    setBlue(blue);\n    setYellow(yellow);\n  };\n\n  const changeSignal = (signalColor) => {\n    setColor(signalColor);\n  }\n\n  const renderSignal = (signalColor) => {\n    if (signalColor === 'red') return redSignal;\n    if (signalColor === 'yellow') return yellowSignal;\n    if (signalColor === 'green') return greenSignal;\n    return null;\n  };\n\n  const contextCar = {\n    red,\n    blue,\n    yellow,\n    color,\n    moveCar,\n    changeSignal,\n    renderSignal,\n  }\n\n  return (\n    <CarsContext.Provider value={contextCar}>\n      {children}\n    </CarsContext.Provider>\n  );\n \n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}